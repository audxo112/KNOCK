# Generated by Django 3.2 on 2021-05-25 15:50

import core.models
import core.storages
import datetime
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('themes', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 25 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=25, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='아이디')),
                ('nickname_value', models.CharField(default='', max_length=16, unique=True, verbose_name='닉네임 값')),
                ('nickname', models.CharField(max_length=16, unique=True, verbose_name='닉네임')),
                ('email', models.EmailField(blank=True, default='', max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='스태프 여부')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='활성 여부')),
                ('created', models.DateTimeField(editable=False, verbose_name='가입한 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('grade', models.CharField(choices=[('normal', '일반'), ('business', '기업'), ('artist', '아티스트')], default='normal', max_length=10, verbose_name='등급')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='순서')),
                ('is_verified', models.BooleanField(default=False, help_text='에디터가 검증한 여부, 에디터에서 만든 유저는 기본값 True', verbose_name='검증 여부')),
                ('is_editor', models.BooleanField(default=False, help_text='에디터 인지 여부, 기본값 False', verbose_name='에디터')),
                ('is_usable_editor', models.BooleanField(default=False, help_text='에디터를 사용가능한지 여부, 기본값 False', verbose_name='에디터사용')),
                ('is_visibility', models.BooleanField(default=True, help_text='해당 유저 관련 정보의 노출 여부, 기본값 True', verbose_name='컨텐츠 노출 여부')),
                ('upload_stop_period', models.DateField(default=django.utils.timezone.now, verbose_name='업로드 정지 기한')),
                ('fcm_token', models.CharField(blank=True, default='', max_length=256, verbose_name='FCM 토큰')),
                ('login_token', models.CharField(default='', help_text='사용자 강제 로그아웃을 위해 필요', max_length=16, verbose_name='로그인 토큰')),
                ('login_method', models.CharField(choices=[('none', '없음'), ('google', '구글')], default='none', max_length=20, verbose_name='로그인 방식')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '유저',
                'verbose_name_plural': '유저',
            },
        ),
        migrations.CreateModel(
            name='BanNickname',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('value', models.CharField(default='', help_text='닉네임을 소문자로 변환한 값', max_length=16, unique=True, verbose_name='닉네임 값')),
                ('nickname', models.CharField(max_length=16, unique=True, verbose_name='닉네임')),
            ],
            options={
                'verbose_name': '금지 닉네임',
                'verbose_name_plural': '금지 닉네임',
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('title', models.CharField(max_length=40, verbose_name='제목')),
                ('content', models.CharField(max_length=255, verbose_name='내용')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
            ],
            options={
                'verbose_name': '알림',
                'verbose_name_plural': '알림',
            },
        ),
        migrations.CreateModel(
            name='SharedTheme',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('state', models.CharField(choices=[('allow', '허용'), ('holding', '보류중'), ('denied', '거절됨')], default='allow', max_length=10, verbose_name='공유상태')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_themes', to=settings.AUTH_USER_MODEL, verbose_name='공유자')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shread_themes', to='themes.theme', verbose_name='테마')),
            ],
            options={
                'verbose_name': '테마 공유정보',
                'verbose_name_plural': '테마 공유정보',
            },
        ),
        migrations.CreateModel(
            name='ReportedTheme',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('report_type', models.CharField(max_length=30, verbose_name='신고 유형')),
                ('report', models.CharField(max_length=300, verbose_name='신고 내용')),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_themes', to=settings.AUTH_USER_MODEL, verbose_name='신고된 유저')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_themes', to=settings.AUTH_USER_MODEL, verbose_name='신고자')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_themes', to='themes.theme', verbose_name='테마')),
            ],
            options={
                'verbose_name': '테마 신고',
                'verbose_name_plural': '테마 신고',
            },
        ),
        migrations.CreateModel(
            name='LikeTheme',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('theme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='themes.theme', verbose_name='테마')),
                ('theme_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_like_themes', to=settings.AUTH_USER_MODEL, verbose_name='테마 제작자')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_themes', to=settings.AUTH_USER_MODEL, verbose_name='좋아요 한 유저')),
            ],
            options={
                'verbose_name': '좋아요한 테마',
                'verbose_name_plural': '좋아요한 테마',
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('image_size_type', models.CharField(choices=[('default', '기본'), ('origin', '원본'), ('mini', '작은'), ('micro', '아주 작은')], default='default', max_length=10, verbose_name='이미지 크기 종류')),
                ('image', models.ImageField(storage=core.storages.OverwriteStorage(), upload_to=core.models.fleet_thumbnail_path, verbose_name='썸네일')),
                ('image_type', models.CharField(default='image', max_length=20, verbose_name='이미지 형식')),
                ('width', models.PositiveIntegerField(default=0, verbose_name='가로')),
                ('height', models.PositiveIntegerField(default=0, verbose_name='세로')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatars', to=settings.AUTH_USER_MODEL, verbose_name='유저')),
            ],
            options={
                'verbose_name': '유저 프로필 사진',
                'verbose_name_plural': '유저 프로필 사진',
            },
        ),
        migrations.CreateModel(
            name='AcquiredTheme',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(editable=False, verbose_name='생성 된 시간')),
                ('updated', models.DateTimeField(verbose_name='최근 업데이트 시간')),
                ('is_fixed_term', models.BooleanField(default=False, help_text='사용기간이 정해져있는지 여부', verbose_name='기간제 여부')),
                ('expiration_date', models.DateTimeField(default=datetime.datetime(2071, 5, 22, 9, 0), verbose_name='만료일')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acquired_themes', to=settings.AUTH_USER_MODEL, verbose_name='소유자')),
                ('theme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acquired_themes', to='themes.theme', verbose_name='테마')),
            ],
            options={
                'verbose_name': '획득한 테마',
                'verbose_name_plural': '획득한 테마',
            },
        ),
    ]
